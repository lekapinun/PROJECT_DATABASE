@model EVENT_VER5.Models.LOCATION


@{
    ViewBag.Title = "Create";
}


@if (Session["username"] != null)
{
    <body style="background-color:#f5f5f5;">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="container" style="background-color:#fff;border-radius:5px;margin-bottom:30px;">
                <div class="row">
                    <h1 class="create-header" style="text-decoration: none;">Create Location</h1>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="create-text">
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-3">
                            <p>Location's Name</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            @Html.EditorFor(model => model.LOCATION_NAME, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LOCATION_NAME, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Owner  </p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            <p>@Session["username"]</p>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Category</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-2">
                            @{
                                List<SelectListItem> listItems = new List<SelectListItem>();
                                listItems.Add(new SelectListItem { Text = "Indoor", Value = "Indoor" });
                                listItems.Add(new SelectListItem { Text = "Outdoor", Value = "Outdoor", });
                            }
                            @Html.DropDownListFor(model => model.CATEGORY, listItems, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CATEGORY, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 create-date-header-top">
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Area</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-2">
                            @Html.EditorFor(model => model.AREA, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AREA, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Square meter</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Facility</p>
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-8">
                            @Html.EditorFor(model => model.FACILITY, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FACILITY, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Price</p>
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-2">
                            @*<input type="text" class="form-control" id="basic-url">*@
                            @Html.EditorFor(model => model.PRICE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PRICE, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Bath per day</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Address</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-8">
                            @Html.EditorFor(model => model.ADDRESS, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Detail</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-8">
                            @Html.EditorFor(model => model.DETAIL, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DETAIL, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Add Picture</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-8">
                            @Html.EditorFor(model => model.PICTURE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PICTURE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row text-center">
                        <input type="submit" style="height: 40px; width: 100px; font-size: 20px; border-radius: 10px; background-color:#EDA23E;" value="Create">
                    </div>
                </div>
            </div>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
    }
    </body>
}
else
{
    Layout = null;
    @Html.Action("Login", "Home")
}

@*@if (Session["username"] != null)
{
    <h2>Create</h2>
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>LOCATION</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.LOCATION_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LOCATION_NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LOCATION_NAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CATEGORY, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        listItems.Add(new SelectListItem { Text = "Indoor", Value = "Indoor" });
                        listItems.Add(new SelectListItem { Text = "Outdoor", Value = "Outdoor", });
                    }
                    @Html.DropDownListFor(model => model.CATEGORY, listItems, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CATEGORY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DETAIL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DETAIL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DETAIL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PICTURE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PICTURE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PICTURE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ADDRESS, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ADDRESS, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FACILITY, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FACILITY, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FACILITY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PRICE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PRICE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PRICE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AREA, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AREA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AREA, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
                            }
                        }
                        else
                        {
                            Layout = null;
                            @Html.Action("Login", "Home")
                        }

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
