@model EVENT_VER5.Models.EVENT

@{
    ViewBag.Title = "Create";
}

@if (Session["username"] != null)
{
    <body style="background-color:#f5f5f5;">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="container" style="background-color:#fff;border-radius:5px;margin-bottom:30px;">
                <div class="row">
                    <h1 class="create-header" style="text-decoration: none;">Create Event</h1>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="create-text">
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Event's Name</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            @Html.EditorFor(model => model.EVENT_NAME, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EVENT_NAME, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Owner  </p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            <p>@Session["username"]</p>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Category</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            @{
                                List<SelectListItem> listItems = new List<SelectListItem>();
                                listItems.Add(new SelectListItem { Text = "Sport", Value = "Sport" });
                                listItems.Add(new SelectListItem { Text = "Entertainment", Value = "Entertainment", });
                                listItems.Add(new SelectListItem { Text = "Talk show", Value = "Talk show" });
                                listItems.Add(new SelectListItem { Text = "Seminar", Value = "Seminar", });
                                listItems.Add(new SelectListItem { Text = "Marketing", Value = "Marketing" });
                                listItems.Add(new SelectListItem { Text = "Wedding", Value = "Wedding" });
                                listItems.Add(new SelectListItem { Text = "Academic", Value = "Academic" });
                                listItems.Add(new SelectListItem { Text = "Technology", Value = "Technology" });
                                listItems.Add(new SelectListItem { Text = "Culture", Value = "Culture" });
                                listItems.Add(new SelectListItem { Text = "Charity", Value = "Charity" });
                                listItems.Add(new SelectListItem { Text = "ETC.", Value = "ETC.", });
                            }
                            @Html.DropDownListFor(model => model.CATEGORY, listItems, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CATEGORY, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 create-date-header-top">
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Start Date</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-3 col-lg-3">
                            @Html.EditorFor(model => model.S_DATE, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.S_DATE, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p class="text-center">Time</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-2 col-lg-2">
                            @Html.EditorFor(model => model.S_TIME, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                            @Html.ValidationMessageFor(model => model.S_TIME, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>End Date</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-3 col-lg-3">
                            @Html.EditorFor(model => model.E_DATE, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.E_DATE, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p class="text-center">Time</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-2 col-lg-2">
                            @Html.EditorFor(model => model.E_TIME, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                            @Html.ValidationMessageFor(model => model.E_TIME, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 create-date-header-top">
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Min Age</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            @Html.EditorFor(model => model.CONDITION_MIN_AGE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CONDITION_MIN_AGE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Max Age</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            @Html.EditorFor(model => model.CONDITION_MAX_AGE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CONDITION_MAX_AGE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Gender</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            @{
                                List<SelectListItem> listCon_Sex = new List<SelectListItem>();
                                listCon_Sex.Add(new SelectListItem { Text = "Male", Value = "Male" });
                                listCon_Sex.Add(new SelectListItem { Text = "Female", Value = "Female", });
                                listCon_Sex.Add(new SelectListItem { Text = "None", Value = "None", });
                            }
                            @Html.DropDownListFor(model => model.CONDITION_SEX, listCon_Sex, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CONDITION_SEX, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Ticket Price</p>
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                            @*<input type="text" class="form-control" id="basic-url">*@
                            @Html.EditorFor(model => model.PRICE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PRICE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Max Seat</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            @Html.EditorFor(model => model.MAX_SEAT, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MAX_SEAT, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Location</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-11">
                            @Html.EditorFor(model => model.LOCATION, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LOCATION, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Detail</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            @Html.EditorFor(model => model.DETAIL, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DETAIL, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Add Picture</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            @Html.EditorFor(model => model.PICTURE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PICTURE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-md-2 col-lg-2">
                            <p>Add Video</p>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            @Html.EditorFor(model => model.VIDEO, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VIDEO, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row text-center">
                        <input type="submit" style="height: 40px; width: 100px; font-size: 20px; border-radius: 10px; background-color:#EDA23E;" value="Create">
                        @*<input type="submit" value="Create" class="btn btn-default" />*@
                        @*<button type="button" style="height: 40px; width: 100px; font-size: 20px; border-radius: 10px;">Reset</button>*@
                    </div>
                </div>
            </div>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
    }
    </body>
}
else
{
    Layout = null;
    @Html.Action("Login", "Home")
}




@*@if (Session["username"] != null)
    {
        <h2>Create</h2>
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>EVENT</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.EVENT_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EVENT_NAME, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EVENT_NAME, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CATEGORY, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            listItems.Add(new SelectListItem { Text = "Sport", Value = "Sport" });
                            listItems.Add(new SelectListItem { Text = "Entertainment", Value = "Entertainment", });
                            listItems.Add(new SelectListItem { Text = "Talk show", Value = "Talk show" });
                            listItems.Add(new SelectListItem { Text = "Seminar", Value = "Seminar", });
                            listItems.Add(new SelectListItem { Text = "Marketing", Value = "Marketing" });
                            listItems.Add(new SelectListItem { Text = "Wedding", Value = "Wedding" });
                            listItems.Add(new SelectListItem { Text = "Academic", Value = "Academic" });
                            listItems.Add(new SelectListItem { Text = "Technology", Value = "Technology" });
                            listItems.Add(new SelectListItem { Text = "Culture", Value = "Culture" });
                            listItems.Add(new SelectListItem { Text = "Charity", Value = "Charity" });
                            listItems.Add(new SelectListItem { Text = "ETC.", Value = "ETC.", });
                        }
                        @Html.DropDownListFor(model => model.CATEGORY, listItems, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CATEGORY, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.DETAIL, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DETAIL, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DETAIL, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PICTURE, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PICTURE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PICTURE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VIDEO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VIDEO, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VIDEO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.S_DATE, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.S_DATE, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.S_DATE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.S_TIME, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.S_TIME, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                        @Html.ValidationMessageFor(model => model.S_TIME, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.E_DATE, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.E_DATE, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.E_DATE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.E_TIME, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.E_TIME, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                        @Html.ValidationMessageFor(model => model.E_TIME, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CONDITION_MIN_AGE, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CONDITION_MIN_AGE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CONDITION_MIN_AGE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CONDITION_MAX_AGE, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CONDITION_MAX_AGE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CONDITION_MAX_AGE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CONDITION_SEX, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{
                            List<SelectListItem> listCon_Sex = new List<SelectListItem>();
                            listCon_Sex.Add(new SelectListItem { Text = "Male", Value = "Male" });
                            listCon_Sex.Add(new SelectListItem { Text = "Female", Value = "Female", });
                            listCon_Sex.Add(new SelectListItem { Text = "None", Value = "None", });
                        }
                        @Html.DropDownListFor(model => model.CONDITION_SEX, listCon_Sex, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CONDITION_SEX, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MAX_SEAT, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MAX_SEAT, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MAX_SEAT, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PRICE, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PRICE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PRICE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LOCATION, "LOCATION_NAME", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LOCATION, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LOCATION, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    }
    else
    {
        Layout = null;
        @Html.Action("Login", "Home")
    }
*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
